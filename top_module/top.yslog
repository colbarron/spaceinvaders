
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.27+3 (git sha1 b58664d44, clang 14.0.0 -fPIC -Os)


-- Parsing `top.sv' using frontend ` -sv' --

1. Executing Verilog-2005 frontend: top.sv
Parsing SystemVerilog input from `top.sv' to AST representation.
Storing AST representation for module `$abstract\top'.
Successfully finished Verilog frontend.

-- Parsing `../provided_modules/counter.sv' using frontend ` -sv' --

2. Executing Verilog-2005 frontend: ../provided_modules/counter.sv
Parsing SystemVerilog input from `../provided_modules/counter.sv' to AST representation.
Storing AST representation for module `$abstract\counter'.
Successfully finished Verilog frontend.

-- Parsing `../provided_modules/sync_reset.sv' using frontend ` -sv' --

3. Executing Verilog-2005 frontend: ../provided_modules/sync_reset.sv
Parsing SystemVerilog input from `../provided_modules/sync_reset.sv' to AST representation.
Storing AST representation for module `$abstract\sync_reset'.
Successfully finished Verilog frontend.

-- Parsing `../provided_modules/synchronizer.sv' using frontend ` -sv' --

4. Executing Verilog-2005 frontend: ../provided_modules/synchronizer.sv
Parsing SystemVerilog input from `../provided_modules/synchronizer.sv' to AST representation.
Storing AST representation for module `$abstract\syncronizer'.
Successfully finished Verilog frontend.

-- Parsing `../utils/nonsynth_clock_gen.sv' using frontend ` -sv' --

5. Executing Verilog-2005 frontend: ../utils/nonsynth_clock_gen.sv
Parsing SystemVerilog input from `../utils/nonsynth_clock_gen.sv' to AST representation.
../utils/nonsynth_clock_gen.sv:8: ERROR: syntax error, unexpected TOK_ELSE, expecting ';'
